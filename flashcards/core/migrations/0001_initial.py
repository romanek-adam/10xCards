# Generated by Django 5.2.7 on 2025-10-18 19:24

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AIGenerationSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(help_text='AI model used for generation')),
                ('input_text', models.TextField(help_text='Input text provided by user (max 10,000 characters)', validators=[django.core.validators.MaxLengthValidator(10000)])),
                ('generated_count', models.PositiveIntegerField(help_text='Number of flashcards generated')),
                ('error_message', models.TextField(blank=True, help_text='Detailed error message if generation failed', null=True)),
                ('error_code', models.CharField(blank=True, help_text='Error code for categorizing failures', max_length=50, null=True)),
                ('api_response_time_ms', models.IntegerField(blank=True, help_text='API response time in milliseconds for performance monitoring', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when session was created')),
                ('user', models.ForeignKey(help_text='User who initiated this generation session', on_delete=django.db.models.deletion.CASCADE, related_name='ai_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'AI Generation Session',
                'verbose_name_plural': 'AI Generation Sessions',
                'db_table': 'ai_generation_sessions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Flashcard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('front', models.CharField(help_text='Question or prompt text (max 200 characters)', max_length=200, validators=[django.core.validators.MinLengthValidator(1), django.core.validators.MaxLengthValidator(200)])),
                ('back', models.CharField(help_text='Answer or explanation text (max 500 characters)', max_length=500, validators=[django.core.validators.MinLengthValidator(1), django.core.validators.MaxLengthValidator(500)])),
                ('creation_method', models.CharField(choices=[('ai_full', 'AI Generated (Accepted without edits)'), ('ai_edited', 'AI Generated (Edited before accepting)'), ('manual', 'Manually Created')], help_text='How this flashcard was created', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when flashcard was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when flashcard was last modified')),
                ('ai_session', models.ForeignKey(blank=True, help_text='AI generation session that created this card (if applicable)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='accepted_flashcards', to='core.aigenerationsession')),
                ('user', models.ForeignKey(help_text='Owner of this flashcard', on_delete=django.db.models.deletion.CASCADE, related_name='flashcards', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Flashcard',
                'verbose_name_plural': 'Flashcards',
                'db_table': 'flashcards',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='aigenerationsession',
            index=models.Index(fields=['user', '-created_at'], name='ai_session_user_created_idx'),
        ),
        migrations.AddIndex(
            model_name='aigenerationsession',
            index=models.Index(fields=['created_at'], name='ai_session_created_idx'),
        ),
        migrations.AddIndex(
            model_name='flashcard',
            index=models.Index(fields=['user', '-created_at'], name='flashcard_user_created_idx'),
        ),
    ]
